// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.71'
    // Define versions in a single place
    ext {
        // Sdk and tools
        // Support library and architecture components support minSdk 14 and above.
        def minSdkVersion = 14
        def targetSdkVersion = 28
        def compileSdkVersion = 28

        // local variables (use def)
        def androidx_test_version = '1.2.0'
        def appcompat_version = '1.1.0'
        def daggerVersion = '2.26'
        def constraint_layout_version = '1.1.3'
        def coroutines_android_version = '1.3.2'
        def expresso_version = '3.2.0'
        def gson_version = '2.8.6'
        def junit_version = '4.12'
        def lifecycle_version = '2.1.0'
        def livedata_version = '2.2.0-rc02'
        def material_version = '1.0.0'
        def retrofit_gson_version = '2.6.2'
        def retrofit_version = '2.6.2'
        def truth_version = '1.0'
        def room_version = '2.2.2'
        def work_version = '2.2.0'
        def timberVersion = '4.7.1'
        def logging_interceptor = '4.3.1'
        def mockito_version = '2.23.0'

        libraries = [
                // Kotlin standard library
                "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",

                // Coroutines
                "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_android_version",
                "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_android_version",

                // Android UI and appcompat
                "androidx.appcompat:appcompat:$appcompat_version",
                "com.google.android.material:material:$material_version",
                "androidx.constraintlayout:constraintlayout:$constraint_layout_version",

                // ViewModel and LiveData
                "androidx.lifecycle:lifecycle-extensions:$lifecycle_version",
                "androidx.lifecycle:lifecycle-livedata-ktx:$livedata_version",
                "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version",

                "androidx.work:work-runtime-ktx:$work_version",

                // Room for database
                "androidx.room:room-ktx:$room_version",

                // network & serialization
                "com.google.code.gson:gson:$gson_version",
                "com.squareup.retrofit2:converter-gson:$retrofit_gson_version",
                "com.squareup.retrofit2:retrofit:$retrofit_version",
                "com.squareup.okhttp3:logging-interceptor:$logging_interceptor",

                // dagger
                "com.google.dagger:dagger-android:$daggerVersion",
                "com.google.dagger:dagger-android-support:$daggerVersion",

                //timber
                "com.jakewharton.timber:timber:$timberVersion"

        ]

        librariesKapt = [
                "androidx.room:room-compiler:$room_version",
                "com.google.dagger:dagger-compiler:$daggerVersion",
                "com.google.dagger:dagger-android-processor:$daggerVersion"
        ]

        librariesDebug = [
                "com.google.truth:truth:$truth_version",
        ]

        testLibraries = [
                // Junit
                "junit:junit:$junit_version",

                // Coroutines testing
                "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_android_version",

                // mocks
                "org.mockito:mockito-core:$mockito_version",
                "org.mockito:mockito-inline:$mockito_version",

                //  Architecture Components testing libraries
                "androidx.arch.core:core-testing:$lifecycle_version"
        ]


        androidTestLibraries = [
                // Junit
                "junit:junit:$junit_version",
                "androidx.test:runner:$androidx_test_version",
                "androidx.test:rules:$androidx_test_version",

                // Espresso
                "androidx.test.espresso:espresso-core:$expresso_version",
                "androidx.test.espresso:espresso-contrib:$expresso_version",
                "androidx.test.espresso:espresso-intents:$expresso_version",

                // Architecture Components testing libraries
                "androidx.arch.core:core-testing:$lifecycle_version",
                "androidx.work:work-testing:$work_version",

                // Coroutines testing
                "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_android_version",
        ]
    }


    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()

    }
}


task clean(type: Delete) {
    delete rootProject.buildDir
}